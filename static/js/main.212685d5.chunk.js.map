{"version":3,"sources":["images/pokemon_logo.png","components/Header.js","components/PokemonThumbnail.js","modules/pokemonReducer.js","images/pica.jpg","pages/Home.js","pages/PokemonDetail.js","components/PokemonItem.js","pages/PokemonBag.js","App.js","modules/index.js","index.js"],"names":["Header","withRouter","location","useState","header","setHeader","window","addEventListener","scrollY","className","pathname","style","position","zIndex","to","src","Logo","alt","PokemonThumbnail","id","name","image","type","nameInKorean","useSelector","state","pokemonReducer","koreanArray","find","pokemon","names","initialState","pokemonArray","likeArray","SET_POKEMONS","SET_KOREAN_DATA","LIKE_POKEMON","likePokemon","pokemonName","Home","allPokemons","setAllPokemons","koData","setKoData","loadMore","setLoadMore","loading","setLoading","moreLoading","setMoreLoading","dispatch","useDispatch","pokemons","getAllPokemons","a","createPokemonObject","results","Promise","all","map","fetchPokemon","nextList","currentList","sumList","getKoreanData","koList","axios","get","pokemonData","data","next","useEffect","koreanData","PokeImage","index","sprites","other","dream_world","front_default","types","onClick","PokemonDetail","match","params","pokemonInKorean","pokemonDetails","dataInKorean","genera","genus","flavor_text_entries","flavor_text","undefined","like","PokemonItem","koreanName","visibility","PokemonBag","likeList","length","res","App","basename","process","exact","path","component","persistConfig","key","storage","rootReducer","combineReducers","action","filter","concat","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.212685d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokemon_logo.6e223bd2.png\";","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Logo from '../images/pokemon_logo.png';\n\nconst Header = withRouter(({location}) => {\n  \n  const [header, setHeader] = useState(false); // 스크롤 내렸는지 확인하는 변수\n  const changeHeader = () => { // 스크롤 여부에 때라 변수 set하는 함수\n    if (window.scrollY >= 100) {\n      setHeader(true)\n    } else {\n      setHeader(false)\n    }\n  }\n\n  window.addEventListener('scroll', changeHeader)\n\n  const setClass = () => { // 헤더 className 리턴하는 함수\n    if (location.pathname === '/') {\n      if (header) {\n        return 'header fixed-header'\n      } else {\n        return 'header'\n      }\n    } else {\n      return 'header fixed-header'\n    }\n  }\n\n  return (\n    <div className={setClass()} style={location.pathname === '/' ? {position: 'fixed', zIndex: '999'} : {position: 'static'}}>\n      <Link to=\"/\">\n        <img src={Logo} alt=\"logo\"/>\n      </Link>\n      <div className=\"menu\">\n        <p><Link to=\"/\">HOME</Link></p>\n        <p><Link to=\"/bag\">MY BAG</Link></p>\n      </div>\n    </div>\n\n\n      \n  )\n})\n\nexport default withRouter(Header)\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst PokemonThumbnail = ({ id, name, image, type }) => {\n\n  const style = `thumb-container ${type}`; // 포켓몬 type마다 배경색 다르게 설정\n  const pokemonArray = useSelector(state => state.pokemonReducer.koreanArray) // 한국어 설명 배열\n  const nameInKorean = pokemonArray.find(pokemon => pokemon.name === name).names[2].name // 한국어 이름\n  \n  return (\n    <div className={style}>\n      <div className=\"number\">\n        <small>#{id}</small>\n      </div>\n      <Link to={`/pokemon/${name}`}>\n        <img src={image} alt={name} />\n      </Link>\n      <div className=\"detail-wrapper\">\n        <h3>{nameInKorean}</h3>\n        <small>Type: {type}</small>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonThumbnail\n","const initialState = {\n    pokemonArray: [],\n    koreanArray: [],\n    likeArray: [],\n};\n\nconst SET_POKEMONS = 'SET_POKEMONS';\nconst SET_KOREAN_DATA = 'SET_KOREAN_DATA';\nconst LIKE_POKEMON = 'LIKE_POKEMON';\n\nexport const setPokemons = pokemonArray => ({ type: SET_POKEMONS, pokemonArray });\nexport const setKoreanData = koreanData => ({ type: SET_KOREAN_DATA, koreanData });\nexport const likePokemon = pokemonName => ({ type: LIKE_POKEMON, pokemonName });\n\nexport default function pokemonReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_POKEMONS:\n            return {\n                ...state,\n                pokemonArray: action.pokemonArray\n            };\n        case SET_KOREAN_DATA:\n            return {\n                ...state,\n                koreanArray: action.koreanData\n            };\n        case LIKE_POKEMON:\n            if (state.likeArray.find(data => data.name === action.pokemonName) !== undefined) {\n                return {\n                    ...state,\n                    likeArray: state.likeArray.filter(data => data.name !== action.pokemonName)\n                }\n            }\n            return {\n                ...state,\n                likeArray: state.likeArray.concat({\n                    name: action.pokemonName,\n                    koreanName: state.koreanArray.find(data => data.name === action.pokemonName).names[2].name,\n                    image: state.pokemonArray.find(data => data.name === action.pokemonName).sprites.other.dream_world.front_default,\n                })\n            }\n        default:\n            return state;\n    };\n};","export default __webpack_public_path__ + \"static/media/pica.4a2fb77d.jpg\";","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nimport PokemonThumbnail from '../components/PokemonThumbnail';\nimport { fetchPokemon, getKoreanData } from '../App';\nimport { setPokemons, setKoreanData } from '../modules/pokemonReducer';\nimport PokeImage from '../images/pica.jpg';\n\nconst Home = () => {\n\n  const [allPokemons, setAllPokemons] = useState([]); // store에 저장 될 포켓몬 배열\n  const [koData, setKoData] = useState([]); // store에 저장될 한국어 설명 배열\n  const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=20'); // 다음 20개 포켓몬 가져오는 api 주소\n  const [loading, setLoading] = useState(true); // 처음 렌더링 될 때 로딩중 변수\n  const [moreLoading, setMoreLoading] = useState(false); // 더보기 눌렀을 때 로딩중 변수\n\n  const dispatch = useDispatch();\n  const pokemons = useSelector(state => state.pokemonReducer.pokemonArray) // allPokemons를 저장한 포켓몬 배열\n\n  const getAllPokemons = async () => {\n    setMoreLoading(true); // 더보기 버튼 -> 로딩중...으로 바뀜\n    const createPokemonObject = async (results) => {\n      // 포켓몬 이름으로 해당 포켓몬의 객체들을 불러와서 배열에 저장\n      const nextList = await Promise.all(results.map(pokemon => fetchPokemon(pokemon.name)));\n      setAllPokemons(currentList => [...currentList, ...nextList]);\n\n      const sumList = [...allPokemons, ...nextList];\n      // 누적시킨 배열을 돌면서 한국어 설명 객체들을 불러와서 배열에 저장\n      const koList = await Promise.all(sumList.map(pokemon => getKoreanData(pokemon.name)));\n      setKoData(koList); \n      setLoading(false); // 처음 렌더링 할 때의 로딩중 없어지고 포켓몬 썸네일 보여짐\n      setMoreLoading(false); // 로딩중... -> 더보기로 바뀜\n    }\n    \n    const pokemonData = await axios.get(loadMore) // 처음 20개 포켓몬 이름만 들어있는 배열 불러옴\n    setLoadMore(pokemonData.data.next); // 다음 20개 포켓몬 가져올 api 주소\n    createPokemonObject(pokemonData.data.results); // 이름만 들어있는 배열로 함수 실행\n  }\n\n  useEffect(() => {\n    getAllPokemons(); \n  }, []);\n\n  useEffect(() => { // koData가 변할 때마다 store에 배열 저장\n    dispatch(setPokemons(allPokemons)); \n    dispatch(setKoreanData(koData))\n  }, [koData]); \n\n\n  return (\n    <div className=\"app-container\">\n      {loading ? (\n        <div className=\"loading\">\n          <h1>로딩중...</h1>\n        </div>\n      ) : (\n      <>\n        <div className=\"pokemon-container\">\n          <div>\n            <img className=\"header-image\" src={PokeImage} alt=\"헤더이미지\" />\n          </div>\n          <div className=\"all-container\">\n            { pokemons.map((pokemon, index) => (\n              <PokemonThumbnail \n                id={pokemon.id}\n                name={pokemon.name}\n                image={pokemon.sprites.other.dream_world.front_default}\n                type={pokemon.types[0].type.name}\n                key={index}\n              />\n              ))}\n          </div>\n          <button className=\"load-more\" onClick={() => getAllPokemons()}>{moreLoading ? '로딩중...' : '더보기!'}</button>\n        </div>\n      </>\n    )}\n    </div>\n  );\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { likePokemon } from '../modules/pokemonReducer';\n\nconst PokemonDetail = ({ match }) => {\n  \n  const name = match.params.name; // 포켓몬 이름 (영어)\n  const dispatch = useDispatch();\n  \n  const pokemonArray = useSelector(state => state.pokemonReducer.pokemonArray) // 포켓몬 객체 배열\n  const pokemon = pokemonArray.find(pokemon => pokemon.name === name) // 이름 같은 객체 추출\n  const koreanArray = useSelector(state => state.pokemonReducer.koreanArray) // 한국어 설명 배열\n  const pokemonInKorean = koreanArray.find(pokemon => pokemon.name === name) // 이름 같은 객체 추출\n  const likeArray = useSelector(state => state.pokemonReducer.likeArray) // 포켓몬 잡았는지 여부를 위함\n\n  const pokemonDetails = pokemon\n  const dataInKorean = pokemonInKorean\n  const [loading, setLoading] = useState(true);\n\n  const like = (name) => { // 포켓몬 잡기, 버리기 함수\n    dispatch(likePokemon(name));\n  }\n\n  useEffect(() => {\n    setLoading(false);\n  }, [])\n\n  \n  return (\n    <div className=\"card-container\">\n      {loading ? (\n        <div className=\"loading\">\n          <h1>로딩중...</h1>\n        </div>\n      ) : (\n        <div className=\"detail-container\">\n          <div className=\"image-container\">\n            <img className=\"detail-image\" src={pokemonDetails.sprites.other.dream_world.front_default} alt={pokemonDetails.name}/>\n            <p>pokemon</p>\n            <div className=\"sizes\">\n              <h1>{dataInKorean.names[2].name}</h1>\n            </div>\n          </div>\n          <div className=\"product\">\n            <div>\n              <div className=\"genera-container\">\n                <h2>{dataInKorean.genera[1].genus}</h2>\n              </div>\n              <div className=\"desc\">\n                <ul>\n                  <li>\n                  {dataInKorean.flavor_text_entries[23].flavor_text}\n                  </li>\n                  <li>\n                  {dataInKorean.flavor_text_entries[31].flavor_text}\n                  </li>\n                  <li>\n                  {dataInKorean.flavor_text_entries[39].flavor_text}\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"button-container\">\n              <button className={ likeArray.find(data => data.name === name) !== undefined ? 'remove' : 'add' } onClick={() => like(name)}>\n                { likeArray.find(data => data.name === name) !== undefined ? '포켓몬 버리기 ..' : '포켓몬 잡기!' }\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonDetail;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { likePokemon } from '../modules/pokemonReducer';\n\nconst PokemonItem = ({ name, koreanName, image }) => {\n  \n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <div className=\"name-container\">\n        <div style={{visibility: 'hidden'}}>\n          <button className=\"delete\" onClick={() => dispatch(likePokemon(name))}>BYE</button>\n        </div>\n        <div className=\"item-name\">{koreanName}</div>\n        <button className=\"delete\" onClick={() => dispatch(likePokemon(name))}>BYE</button>\n      </div>\n      <div className=\"item-container\">\n        <img src={image} alt={name}/>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonItem\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport PokemonItem from '../components/PokemonItem';\n\nconst PokemonBag = () => {\n\n  const likeList = useSelector(state => state.pokemonReducer.likeArray)\n\n  return (\n      <div>\n        {likeList.length === 0 ? (\n          <div className=\"bag-container\">\n            <h1>아직 잡은 포켓몬이 없어요!</h1>\n          </div>\n        ) : (\n          <div className=\"bag\">\n          { likeList.map( (pokemon, index) => (\n            <PokemonItem \n              name={pokemon.name}\n              koreanName={pokemon.koreanName}\n              image={pokemon.image}\n              key={index}\n            />\n           ))}\n        </div>\n        )}\n      </div>\n  )\n}\n\nexport default PokemonBag\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport PokemonDetail from './pages/PokemonDetail';\nimport PokemonBag from './pages/PokemonBag';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/pokemon/:name\" component={PokemonDetail} />\n      <Route path=\"/bag\" component={PokemonBag} />\n    </BrowserRouter>\n  );\n}\n\nexport const fetchPokemon = async (name) => {\n  const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\n  return res.data;\n}\n\nexport const getKoreanData = async (name) => {\n  const res = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${name}`);\n  return res.data;\n} \n\nexport default App;\n","import { combineReducers } from 'redux';\nimport pokemonReducer from './pokemonReducer';\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n  };\n\nconst rootReducer = combineReducers({\n    pokemonReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './modules';\n\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst store = createStore(rootReducer);\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}